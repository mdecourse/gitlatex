var tipuesearch = {"pages": [{'title': 'About', 'text': '', 'tags': '', 'url': 'About.html'}, {'title': 'Beginners', 'text': 'LaTeX for Beginners: \n http://www.docs.is.ed.ac.uk/skills/documents/3722/3722-2014.pdf \n', 'tags': '', 'url': 'Beginners.html'}, {'title': 'LTFB', 'text': 'LaTeX For Beginners \n LaTeX (pronouncedlay-tek) is a document preparation system for producing professional-looking documents, it is not a word processor. \n \\documentclass[a4paper,12pt]{article}\n\n\\begin{document}\n\n\\title{My First Document}\n\\author{My Name}\n\\date{\\today}\n\\maketitle\n\n\\pagenumbering{roman}\n\\tableofcontents\n\\newpage\n\\pagenumbering{arabic}\n\n\\section{Introduction}\nThis is the introduction.\n\n\\section{Methods}\n\n\\subsection{Stage 1}\n\\label{sec1}\nThe first part of the methods.\n\n\\subsection{Stage 2}\nThe second part of the methods.\n\n\\section{Results}\nHere are my results. Referring to section \\ref{sec1} on page \\pageref{sec1}.\n\n\\end{document} \n The \\documentclass command must appear at the start of every LATEX document. The text in the curly brackets specifies the document class. The article document class is suitable for shorter documents such as journal articles and short reports. Other document classes include report (for longer documents with chapters, e.g. PhD theses), proc (conference proceedings), book and slides. The text in the square brackets specifies options — in this case it sets the paper size to A4 and the main font size to 12pt. \n The \\begin{document} and \\end{document} commands\xa0 enclose\xa0 the\xa0 textand commands that make up your document.\xa0 Anything typed before \\begin{document} is known as the preamble, and will affect the whole document. Anything typed after \\end{document} is ignored. \n You can label any of the sectioning commands so they can be referred to in other parts of the document.\xa0 Label the section with \\label{labelname}. Then type \\ref{labelname} or \\pageref{labelname}, when you want to refer to the section or page number of the label. \n If you use sectioning commands it is very easy to generate a table of contents. Type \\tableofcontents where you want the table of contents to appear in your document — often directly after the title page. You may also want to change the page numbering so that roman numerals (i, ii, iii) are used for pages before the main document starts.\xa0 This will also ensure that the main document starts on page 1.\xa0 Page numbering can be switched between arabic and roman using \\pagenumbering{...}. \n The\\newpage command inserts a page break so that we can see the effect of the page numbering commands. \n To put coloured text in your document you need to use apackage.\xa0 There are many packages that can be used with LATEX to enhance its functionality. Packages are included in the preamble (i.e. before the \\begin{document} command). Packages are activated using the \\usepackage[options]{package} command, where packageis the name of the package and optionsis an optional list of keywords that trigger special features in the package. \n The basic colour names that \\usepackage{color} knows about are black, red, green, blue, cyan, magenta, yellow and white. \n The following symbols are reserved characters which have a special meaningin LATEX: \n $ % ^ & _ { } ~ \\ \n All of these apart from the backslash \\ can be inserted as characters in your document by adding a prefix backslash: \\#\xa0 \\$\xa0 \\%\xa0 \\^{} \\&\xa0 \\_\xa0 \\{\xa0 \\}\xa0 \\~{}. \n Note that you need to type a pair of curly brackets {} after the hat ^ and tilde ~, otherwise these will appear as accents over the following character. For example, "\\^ e" produces "ˆe".The above code will produce: # $ % ˆ & { }\xa0 ̃. The backslash character \\can not be entered by adding a prefix backslash, \\\\, as this is used for line breaking. Use the \\textbackslask command instead. \n This chapter describes how to insert an image in to your LATEX document,which requires thegraphicx package.\xa0 Images should be PDF, PNG, JPEGor GIF files.\xa0 The following code will insert an image called myimage: \n \\begin{figure}[h]\n\\centering\n\\includegraphics[width=1\\textwidth]{myimage}\n\\caption{Here is my image}\n\\label{image-myimage}\n\\end{figure} \n [h] is the placement specifier. h means put the figure approximately here (if it will fit). Other options are t (at the top of the page), b (at the bottom ofthe page) and p(on a separate page for figures). You can also add !, which overrides the rule LATEX uses for choosing where to put the figure, and makes it more likely it will put it where you want (even if it doesn’t look so good). \\centering centres the image on the page, if not used images are left-alignedby default. It’s a good idea to use this as the figure captions are centred. includegraphics{...} is the command that actually puts the image in your document. The image file should be saved in the same folder as the .tex file. [width=1\\textwidth] is an optional command that specifies the width ofthe picture - in this case the same width as the text. The width could also be given in centimeters (cm). You could also use[ scale=0.5] which scales the image by the desired factor, in this case reducing by half.', 'tags': '', 'url': 'LTFB.html'}]};